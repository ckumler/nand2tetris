// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    DMux8Way(in=load,sel=address,a=dA,b=dB,c=dC,d=dD,e=dE,f=dF,g=dG,h=dH);

    Register(in=in, load=dA, out=mA);
    Register(in=in, load=dB, out=mB);
    Register(in=in, load=dC, out=mC);
    Register(in=in, load=dD, out=mD);
    Register(in=in, load=dE, out=mE);
    Register(in=in, load=dF, out=mF);
    Register(in=in, load=dG, out=mG);
    Register(in=in, load=dH, out=mH);

    Mux8Way16(a=mA,b=mB,c=mC,d=mD,e=mE,f=mF,g=mG,h=mH,sel=address,out=out);
}